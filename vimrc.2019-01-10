" ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
" +++++++++++++++++++++++++++++++++++++++++++++++++++++-[ VIM-PLUG ]-++
" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	call plug#begin()

	" ----------------------------------------------------[ NERDTree ]---
	" Explorateur de fichiers/dossiers
	  Plug 'scrooloose/nerdtree'			

	" -----------------------------------------------[ NERDCommenter ]---
	" Commenter tout type de fichier
		Plug 'scrooloose/nerdcommenter'

	" -----------------------------------------------------[ AirLine ]---
	" Barre d'état
	  Plug 'vim-airline/vim-airline'		
		" --------------------------------------------[ AirLine Thèmes ]---
		" Pour utiliser des thèmes avec la barre d'état
		Plug 'vim-airline/vim-airline-themes'

	" -------------------------------------------------------[ Emmet ]---
	" Insertion automatique
	  Plug 'mattn/emmet-vim'			

	" ----------------------------------------------------[ Surround ]---
	" Remplacement de paires de caractères par un autre (), [], {}, etc.
	  Plug 'tpope/vim-surround'
			" --------------------------------------------------[ Repeat ]---
			" Nécessaire pour travailler avec vim-surround
				Plug 'tpope/vim-repeat'			

	" -----------------------------------------------[ YouCompleteMe ]---
	" Auto-complétion
	  Plug 'valloric/youcompleteme'			
				" ----------------------------------------------[ SuperTab ]---
				" Supertab : complément pour YCM
				Plug 'ervandew/supertab'

				" ---------------------------------------------[ UltiSnips ]---
				" Ultisnips : complément pour YCM
				Plug 'sirver/ultisnips'

				" ----------------------------------------------[ Snippets ]---
				" Snippets : Complément pour YCM
				Plug 'honza/vim-snippets'

		" -----------------------------------------------------[ CtrlP ]---
		" CtrlP
		Plug 'ctrlpvim/ctrlp.vim'

	"--------------------------------------------------[ CheckHealth ]---
	" Vérifie l'état de santé de Vim. Faire :CheckHealth
		Plug 'rhysd/vim-healthcheck'

	" ---------------------------------------------[ QUELQUES THÈMES ]---
	" Thème
	  Plug 'crusoexia/vim-monokai'			

	" ----------------------------------------------------[ Fugitive ]---
	" Interraction avec GIT
	  Plug 'tpope/vim-fugitive'			

	" -----------------------------------------------------[ VimWiki ]---
	" Wiki personnel local
	  Plug 'vimwiki/vimwiki'			

	" Indentation : une ligne pour visualiser l'indentation
"	  Plug 'yggdroot/indentline'		

	" ----------------------------------------[ Vim-Multiple-Cursors ]---
	" Multiple curseurs
	  Plug 'terryma/vim-multiple-cursors'	

	" ----------------------------------------------[ Vim-Game-Snake ]---
	" Jeu : Snake => Lancer avec :VimGameSnake
		Plug 'johngrib/vim-game-snake'

	" PLUGINS À INSTALLER
	" AUTO-SAVE : À xhaque fois que je [ESC]
	Plug '907th/vim-auto-save'

	" FERME AUTOMATIQUEMENT LES (, {, [, etc.
	Plug 'raimondi/delimitmate'

	" CSS :COLORATION SYNTAXIQUE
	Plug 'ap/vim-css-color'

	call plug#end()

" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
" +++++++++++++++++++++++++++++++++++++++++++++++-[ CONFIGURATIONS ]-++
" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	" Incompatibilité avec Vi
	set nocompatible		

	" Affiche les numéros de ligne relative au curseur
	set number relativenumber 
	augroup numbertoggle
	  autocmd!
	  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
	  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
	augroup END

	set smartindent		" Indentation intelligente
	set autoindent		" Conserve l'indentation sur une nouvelle ligne
	set showcmd				" Affiche les touches saisis
	set ruler				  " Affiche la position du curseur
	let mapleader=","	" Attribution de la touche <leader>
	syntax on				  " Coloration syntaxique
	set cursorline		" Met en évidence la ligne où se trouve le curseur
	set scrolloff =5	" Débuter les scroll dès que le curseur arrive à x lignes du début ou de la fin de l'écran
	set wrap					" Affiche les lignes trop longues sur plusieurs lignes

	" Gestion des espaces invisibles
	" lcs, affiche la fin d'une ligne (ici avec $)
	" tab, affiche les tabulations (ici avec >¨)
	" trail, affiche les espaces vides après le dernier caractère visible (ici " avec ø)
	set lcs=eol:$,tab:>¨,trail:ø

	" ---------------------------------------------------[ RECHERCHE ]---
	set ignorecase		" ignore la casse lors d'une recherche
	set smartcase			" Si une recherche contient une majuscule, re-active la sensibilité à la casse
	set incsearch			" Surligne les résultats d'une recherche pendant la saisie
"	set hlsearch			" Surligne les résultats de recherche
	filetype  indent plugin on	" active l'indentation et les plugins relatifs au language (par exemple la complétion des fonctions php quand vous éditez un fichier php

	" TABULATIONS : Les 3 options suivantes sont importantes si vous voulez avoir un code cohérent
	set  tabstop =2
	set  shiftwidth =2
	set  softtabstop =2

	set nrformats+=alpha	" Active l'incrémentation pour les caractères alphabétique (Ctrl+a et Ctrl+x)

	" Importer du texte depuis un PDF. Nécessite le paquet xpdf
	:command! -complete=file -nargs=1 Rpdf :r !pdftotext -nopgbrk <q-args> -

	" Grâce aux lignes suivantes, il suffira de sauvegarder (:w) pour voir ses modifications actives dans toutes les instances ouvertes de vim.
	if has("autocmd")
		 autocmd! bufwritepost .vimrc source ~/.vimrc
	endif

	" Force le mode 256 couleurs
	set t_Co=256		

	" Utilisation de u même après fermeture du fichier ;) (annulation persistante)
	set undofile
	set undodir=~/.vim/undo/

" ---------------------------------------------------------------------
" ------- DÉSACTIVATION/REDIRECTION DE LA FONCTION DES TOUCHES --------
" ---------------------------------------------------------------------

	map <right> <nop>
	map <left> <nop>
	map <up> <nop>
	map <down> <nop>
	imap <right> <nop>
	imap <left> <nop>
	imap <up> <nop>
	imap <down> <nop>

	"nmap <C-n> :bn<CR>
	"nmap <C-b> :bp<CR>

	" À chaque fois que j'appuierai 2x de suite sur , cela fera ESC
	imap ,, <esc>	

	" Ferme la parenthèse et place le curseur entre les deux
  "	inoremap ( ()<left> " PLUS BESOIN PUISQUE PLUGIN : delimitmate
	" Ferme le crochet et place le curseur entre les deux
  "	inoremap [ []<left>

	" Sauvegarde de la session en cours
	nnoremap <leader>s :wa<CR>:mksession! ~/ma_session.vim<CR>:q<CR>

" ---------------------------------------------------------------------
" --------------------------------------------[ PLUGIN -> NERDTree ]---
	" Création d'un raccourci pour lancer NERDTree
	nnoremap <silent> <F9> :NERDTree<CR>	
	" Afficher les fichiers/dossiers cachés dans NERDTree
	let NERDTreeShowHidden=1	

" ---------------------------------------------------------------------
" ---------------------------------------[ PLUGIN -> YOUCOMPLETEME ]---
	" Mode(s) utilisé(s) par défaut : a, r, 
	"let g:ctrlp_working_path_mode = 'ra'
	" Nbre de lignes à afficher
	let g:ctrlp_max_height = 20
" ---------------------------------------------------------------------
" ---------------------------------------[ PLUGIN -> YOUCOMPLETEME ]---
		" make YCM compatible with UltiSnips (using supertab)
		let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
		let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
		let g:SuperTabDefaultCompletionType = '<C-n>'

		" better key bindings for UltiSnipsExpandTrigger
		let g:UltiSnipsExpandTrigger = "<tab>"
		let g:UltiSnipsJumpForwardTrigger = "<tab>"
		let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" ---------------------------------------------[ PLUGIN -> AirLine ]---
	let g:airline#extensions#tabline#enabled = 1
" ---------------------------------------[ PLUGIN -> vim-auto-save ]---
	" Auto-sauvegarde les modifs à chaque fois qu'on fait [ECHAP]
	let g:auto_save = 1 
	
" -------------------------------------------[ PLUGIN -> ]---

" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
" +++++++++++++++++++++++++++++++++++++++++++++++++++++++-[ THEMES ]-++
" +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	colorscheme monokai " Vim

	" AirLine
	let g:airline_powerline_fonts = 1
	"let g:airline_symbols
	let g:airline_theme = 'dark' " simple, angr, dark, kolor, light, luna, sol, term, tomorrow, molokai
	let g:airline#extensions#tabline#enabled = 1
	let g:airline#extensions#tabline#left_sep = ' '
	let g:airline#extensions#tabline#left_alt_sep = '|'
	let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

	" ++++++++++++++++++++++++++++++++++++++++++++++-[ FIN DE .VIMRC ]-++
